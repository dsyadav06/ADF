{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "AzureTraining-Day1"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"OmPrem_SQL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'OmPrem_SQL'"
		},
		"connAzureDataLake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'connAzureDataLake'"
		},
		"connAzureSQLDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'connAzureSQLDatabase'"
		},
		"dataLake_Conn_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'dataLake_Conn'"
		},
		"connAzureDataLake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sacicd.dfs.core.windows.net"
		},
		"dataLake_Conn_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sacicd.dfs.core.windows.net"
		},
		"Azure-SSIS-IR_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint": {
			"type": "string",
			"defaultValue": "azsqlservertest.database.windows.net"
		},
		"Azure-SSIS-IR_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName": {
			"type": "string",
			"defaultValue": "SrvAzureAdmin"
		},
		"Azure-SSIS-IR_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword": {
			"type": "secureString"
		},
		"SelfHosted-IR-Reference_properties_typeProperties_linkedInfo_resourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/c5844768-fed4-47de-b47e-5ff772c4cf95/resourcegroups/rg_cicd_prod/providers/Microsoft.DataFactory/factories/df-cicd-prod/integrationruntimes/SelfHostedIR"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Azure-SSIS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute SSIS package1",
						"type": "ExecuteSSISPackage",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"packageLocation": {
								"packagePath": "Azure-SSIS IR/DemoProject/LoadData.dtsx",
								"type": "SSISDB"
							},
							"environmentPath": null,
							"connectVia": {
								"referenceName": "Azure-SSIS-IR",
								"type": "IntegrationRuntimeReference"
							},
							"loggingLevel": "Basic",
							"projectConnectionManagers": {},
							"packageConnectionManagers": {}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/Azure-SSIS-IR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyAzureSQLData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "dsAzureSQLDatabase",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dsAzureDataLake",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsAzureSQLDatabase')]",
				"[concat(variables('factoryId'), '/datasets/dsAzureDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipelineTest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_ozz",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "input1//Customer.csv"
							},
							{
								"name": "Destination",
								"value": "dbo.Customer_Demo"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CustomerID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CustomerID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Title",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Title",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MiddleName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MiddleName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LastName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Suffix",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Suffix",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompanyName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CompanyName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SalesPerson",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SalesPerson",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Phone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PasswordHash",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PasswordHash",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PasswordSalt",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PasswordSalt",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "rowguid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "rowguid",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_ozz",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_ozz",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_ozz')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_ozz')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ProductDataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ProductDataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Product": {},
									"ProductCategory": {},
									"ProductCategorySink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ProductDataFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ForEach')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetTables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT ID,TableName from [dbo].[ControlTable]",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "dsAzureSQLDatabase",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "LoadTables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetTables').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Create Files",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Parameter",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"mainTable": {
												"value": "@item().TableName",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsAzureSQLDatabase')]",
				"[concat(variables('factoryId'), '/pipelines/Parameter')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parameter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "dsAzureSQLDatabasePrameter",
								"type": "DatasetReference",
								"parameters": {
									"tableName": {
										"value": "@pipeline().parameters.mainTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dsAzureDataLakeParameter",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@concat(pipeline().parameters.mainTable,'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"mainTable": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsAzureSQLDatabasePrameter')]",
				"[concat(variables('factoryId'), '/datasets/dsAzureDataLakeParameter')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Variable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set File Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "dsAzureSQLDatabasePrameter",
								"type": "DatasetReference",
								"parameters": {
									"tableName": {
										"value": "@pipeline().parameters.mainTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dsAzureDataLakeParameter",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('DestinationFilename')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set File Name",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "DestinationFilename",
							"value": {
								"value": "@concat(pipeline().parameters.mainTable,'_',utcnow(),'.csv')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"mainTable": {
						"type": "string"
					}
				},
				"variables": {
					"DestinationFilename": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsAzureSQLDatabasePrameter')]",
				"[concat(variables('factoryId'), '/datasets/dsAzureDataLakeParameter')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/wait')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_ozz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connAzureSQLDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "Title",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "FirstName",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MiddleName",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "LastName",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Suffix",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "CompanyName",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Phone",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "PasswordHash",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "PasswordSalt",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Customer_Demo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connAzureSQLDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_ozz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connAzureDataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Customer.csv",
						"fileSystem": "input1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "Title",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "MiddleName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Suffix",
						"type": "String"
					},
					{
						"name": "CompanyName",
						"type": "String"
					},
					{
						"name": "SalesPerson",
						"type": "String"
					},
					{
						"name": "EmailAddress",
						"type": "String"
					},
					{
						"name": "Phone",
						"type": "String"
					},
					{
						"name": "PasswordHash",
						"type": "String"
					},
					{
						"name": "PasswordSalt",
						"type": "String"
					},
					{
						"name": "rowguid",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connAzureDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsAzureDataLake')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connAzureDataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "AzureTraining.csv",
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connAzureDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsAzureDataLakeParameter')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connAzureDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connAzureDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsAzureSQLDatabase')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connAzureSQLDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "ProductNumber",
						"type": "nvarchar"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "ProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SellStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SellEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DiscontinuedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ThumbNailPhoto",
						"type": "varbinary"
					},
					{
						"name": "ThumbnailPhotoFileName",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Product"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connAzureSQLDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsAzureSQLDatabasePrameter')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connAzureSQLDatabase",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AddressID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AddressLine1",
						"type": "nvarchar"
					},
					{
						"name": "AddressLine2",
						"type": "nvarchar"
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "StateProvince",
						"type": "nvarchar"
					},
					{
						"name": "CountryRegion",
						"type": "nvarchar"
					},
					{
						"name": "PostalCode",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connAzureSQLDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsProduct')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connAzureDataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Product.csv",
						"fileSystem": "input2"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ProductId",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "ProductNumber",
						"type": "String"
					},
					{
						"name": "ProductCost",
						"type": "String"
					},
					{
						"name": "ProductCategoryid",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connAzureDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsProductCategory')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connAzureDataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ProductCategory.csv",
						"fileSystem": "input2"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ProductCategoryId",
						"type": "String"
					},
					{
						"name": "ProductCategoryName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connAzureDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsProductDestination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connAzureDataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connAzureDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Git')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dataLake_Conn",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "input1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dataLake_Conn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OmPrem_SQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('OmPrem_SQL_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SelfHostedIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SelfHostedIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/connAzureDataLake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('connAzureDataLake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('connAzureDataLake_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/connAzureSQLDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('connAzureSQLDatabase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataLake_Conn')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('dataLake_Conn_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('dataLake_Conn_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CopyAzureSQLData",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 1,
						"startTime": "2020-06-18T13:04:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CopyAzureSQLData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure-SSIS-IR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"nodeSize": "Standard_D2_v3",
						"numberOfNodes": 1,
						"maxParallelExecutionsPerNode": 1
					},
					"ssisProperties": {
						"catalogInfo": {
							"catalogServerEndpoint": "[parameters('Azure-SSIS-IR_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint')]",
							"catalogAdminUserName": "[parameters('Azure-SSIS-IR_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName')]",
							"catalogAdminPassword": {
								"type": "SecureString",
								"value": "[parameters('Azure-SSIS-IR_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword')]"
							},
							"catalogPricingTier": "Basic"
						},
						"edition": "Standard",
						"licenseType": "LicenseIncluded"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SelfHosted-IR-Reference')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {
					"linkedInfo": {
						"resourceId": "[parameters('SelfHosted-IR-Reference_properties_typeProperties_linkedInfo_resourceId')]",
						"authorizationType": "Rbac"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SelfHostedIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProductDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsProduct",
								"type": "DatasetReference"
							},
							"name": "Product"
						},
						{
							"dataset": {
								"referenceName": "dsProductCategory",
								"type": "DatasetReference"
							},
							"name": "ProductCategory"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsProductDestination",
								"type": "DatasetReference"
							},
							"name": "ProductCategorySink"
						}
					],
					"transformations": [
						{
							"name": "ProductJoin"
						}
					],
					"script": "source(output(\n\t\tProductId as string,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tProductCost as string,\n\t\tProductCategoryid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> Product\nsource(output(\n\t\tProductCategoryId as string,\n\t\tProductCategoryName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> ProductCategory\nProduct, ProductCategory join(Product@ProductCategoryid == ProductCategory@ProductCategoryId,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> ProductJoin\nProductJoin sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ProductCategorySink.csv'],\n\tmapColumn(\n\t\tProductId,\n\t\tName,\n\t\tProductNumber,\n\t\tProductCost,\n\t\tProductCategoryid = Product@ProductCategoryid,\n\t\tProductCategoryName\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ProductCategorySink"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsProduct')]",
				"[concat(variables('factoryId'), '/datasets/dsProductCategory')]",
				"[concat(variables('factoryId'), '/datasets/dsProductDestination')]"
			]
		}
	]
}